{"version":3,"file":"vue-virtual-scroller.min.js","sources":["../src/config.js","../node_modules/vue-resize/dist/vue-resize.esm.js","../node_modules/vue-observe-visibility/dist/vue-observe-visibility.esm.js","../node_modules/scrollparent/scrollparent.js","../src/components/common.js","../src/utils.js","../src/components/RecycleScroller.vue","../node_modules/vue-runtime-helpers/dist/normalize-component.mjs","../src/components/DynamicScroller.vue","../src/components/DynamicScrollerItem.vue","../src/index.js","../src/mixins/IdState.js"],"sourcesContent":["export default {\n  itemsLimit: 1000,\n}\n","function getInternetExplorerVersion() {\n\tvar ua = window.navigator.userAgent;\n\n\tvar msie = ua.indexOf('MSIE ');\n\tif (msie > 0) {\n\t\t// IE 10 or older => return version number\n\t\treturn parseInt(ua.substring(msie + 5, ua.indexOf('.', msie)), 10);\n\t}\n\n\tvar trident = ua.indexOf('Trident/');\n\tif (trident > 0) {\n\t\t// IE 11 => return version number\n\t\tvar rv = ua.indexOf('rv:');\n\t\treturn parseInt(ua.substring(rv + 3, ua.indexOf('.', rv)), 10);\n\t}\n\n\tvar edge = ua.indexOf('Edge/');\n\tif (edge > 0) {\n\t\t// Edge (IE 12+) => return version number\n\t\treturn parseInt(ua.substring(edge + 5, ua.indexOf('.', edge)), 10);\n\t}\n\n\t// other browser\n\treturn -1;\n}\n\nvar isIE = void 0;\n\nfunction initCompat() {\n\tif (!initCompat.init) {\n\t\tinitCompat.init = true;\n\t\tisIE = getInternetExplorerVersion() !== -1;\n\t}\n}\n\nvar ResizeObserver = { render: function render() {\n\t\tvar _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('div', { staticClass: \"resize-observer\", attrs: { \"tabindex\": \"-1\" } });\n\t}, staticRenderFns: [], _scopeId: 'data-v-b329ee4c',\n\tname: 'resize-observer',\n\n\tmethods: {\n\t\tcompareAndNotify: function compareAndNotify() {\n\t\t\tif (this._w !== this.$el.offsetWidth || this._h !== this.$el.offsetHeight) {\n\t\t\t\tthis._w = this.$el.offsetWidth;\n\t\t\t\tthis._h = this.$el.offsetHeight;\n\t\t\t\tthis.$emit('notify');\n\t\t\t}\n\t\t},\n\t\taddResizeHandlers: function addResizeHandlers() {\n\t\t\tthis._resizeObject.contentDocument.defaultView.addEventListener('resize', this.compareAndNotify);\n\t\t\tthis.compareAndNotify();\n\t\t},\n\t\tremoveResizeHandlers: function removeResizeHandlers() {\n\t\t\tif (this._resizeObject && this._resizeObject.onload) {\n\t\t\t\tif (!isIE && this._resizeObject.contentDocument) {\n\t\t\t\t\tthis._resizeObject.contentDocument.defaultView.removeEventListener('resize', this.compareAndNotify);\n\t\t\t\t}\n\t\t\t\tdelete this._resizeObject.onload;\n\t\t\t}\n\t\t}\n\t},\n\n\tmounted: function mounted() {\n\t\tvar _this = this;\n\n\t\tinitCompat();\n\t\tthis.$nextTick(function () {\n\t\t\t_this._w = _this.$el.offsetWidth;\n\t\t\t_this._h = _this.$el.offsetHeight;\n\t\t});\n\t\tvar object = document.createElement('object');\n\t\tthis._resizeObject = object;\n\t\tobject.setAttribute('aria-hidden', 'true');\n\t\tobject.setAttribute('tabindex', -1);\n\t\tobject.onload = this.addResizeHandlers;\n\t\tobject.type = 'text/html';\n\t\tif (isIE) {\n\t\t\tthis.$el.appendChild(object);\n\t\t}\n\t\tobject.data = 'about:blank';\n\t\tif (!isIE) {\n\t\t\tthis.$el.appendChild(object);\n\t\t}\n\t},\n\tbeforeDestroy: function beforeDestroy() {\n\t\tthis.removeResizeHandlers();\n\t}\n};\n\n// Install the components\nfunction install(Vue) {\n\tVue.component('resize-observer', ResizeObserver);\n\tVue.component('ResizeObserver', ResizeObserver);\n}\n\n// Plugin\nvar plugin = {\n\t// eslint-disable-next-line no-undef\n\tversion: \"0.4.5\",\n\tinstall: install\n};\n\n// Auto-install\nvar GlobalVue = null;\nif (typeof window !== 'undefined') {\n\tGlobalVue = window.Vue;\n} else if (typeof global !== 'undefined') {\n\tGlobalVue = global.Vue;\n}\nif (GlobalVue) {\n\tGlobalVue.use(plugin);\n}\n\nexport { install, ResizeObserver };\nexport default plugin;\n","function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n    return arr2;\n  }\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nfunction processOptions(value) {\n  var options;\n\n  if (typeof value === 'function') {\n    // Simple options (callback-only)\n    options = {\n      callback: value\n    };\n  } else {\n    // Options object\n    options = value;\n  }\n\n  return options;\n}\nfunction throttle(callback, delay) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var timeout;\n  var lastState;\n  var currentArgs;\n\n  var throttled = function throttled(state) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    currentArgs = args;\n    if (timeout && state === lastState) return;\n    var leading = options.leading;\n\n    if (typeof leading === 'function') {\n      leading = leading(state, lastState);\n    }\n\n    if ((!timeout || state !== lastState) && leading) {\n      callback.apply(void 0, [state].concat(_toConsumableArray(currentArgs)));\n    }\n\n    lastState = state;\n    clearTimeout(timeout);\n    timeout = setTimeout(function () {\n      callback.apply(void 0, [state].concat(_toConsumableArray(currentArgs)));\n      timeout = 0;\n    }, delay);\n  };\n\n  throttled._clear = function () {\n    clearTimeout(timeout);\n    timeout = null;\n  };\n\n  return throttled;\n}\nfunction deepEqual(val1, val2) {\n  if (val1 === val2) return true;\n\n  if (_typeof(val1) === 'object') {\n    for (var key in val1) {\n      if (!deepEqual(val1[key], val2[key])) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  return false;\n}\n\nvar VisibilityState =\n/*#__PURE__*/\nfunction () {\n  function VisibilityState(el, options, vnode) {\n    _classCallCheck(this, VisibilityState);\n\n    this.el = el;\n    this.observer = null;\n    this.frozen = false;\n    this.createObserver(options, vnode);\n  }\n\n  _createClass(VisibilityState, [{\n    key: \"createObserver\",\n    value: function createObserver(options, vnode) {\n      var _this = this;\n\n      if (this.observer) {\n        this.destroyObserver();\n      }\n\n      if (this.frozen) return;\n      this.options = processOptions(options);\n\n      this.callback = function (result, entry) {\n        _this.options.callback(result, entry);\n\n        if (result && _this.options.once) {\n          _this.frozen = true;\n\n          _this.destroyObserver();\n        }\n      }; // Throttle\n\n\n      if (this.callback && this.options.throttle) {\n        var _ref = this.options.throttleOptions || {},\n            _leading = _ref.leading;\n\n        this.callback = throttle(this.callback, this.options.throttle, {\n          leading: function leading(state) {\n            return _leading === 'both' || _leading === 'visible' && state || _leading === 'hidden' && !state;\n          }\n        });\n      }\n\n      this.oldResult = undefined;\n      this.observer = new IntersectionObserver(function (entries) {\n        var entry = entries[0];\n\n        if (entries.length > 1) {\n          var intersectingEntry = entries.find(function (e) {\n            return e.isIntersecting;\n          });\n\n          if (intersectingEntry) {\n            entry = intersectingEntry;\n          }\n        }\n\n        if (_this.callback) {\n          // Use isIntersecting if possible because browsers can report isIntersecting as true, but intersectionRatio as 0, when something very slowly enters the viewport.\n          var result = entry.isIntersecting && entry.intersectionRatio >= _this.threshold;\n          if (result === _this.oldResult) return;\n          _this.oldResult = result;\n\n          _this.callback(result, entry);\n        }\n      }, this.options.intersection); // Wait for the element to be in document\n\n      vnode.context.$nextTick(function () {\n        if (_this.observer) {\n          _this.observer.observe(_this.el);\n        }\n      });\n    }\n  }, {\n    key: \"destroyObserver\",\n    value: function destroyObserver() {\n      if (this.observer) {\n        this.observer.disconnect();\n        this.observer = null;\n      } // Cancel throttled call\n\n\n      if (this.callback && this.callback._clear) {\n        this.callback._clear();\n\n        this.callback = null;\n      }\n    }\n  }, {\n    key: \"threshold\",\n    get: function get() {\n      return this.options.intersection && this.options.intersection.threshold || 0;\n    }\n  }]);\n\n  return VisibilityState;\n}();\n\nfunction bind(el, _ref2, vnode) {\n  var value = _ref2.value;\n  if (!value) return;\n\n  if (typeof IntersectionObserver === 'undefined') {\n    console.warn('[vue-observe-visibility] IntersectionObserver API is not available in your browser. Please install this polyfill: https://github.com/w3c/IntersectionObserver/tree/master/polyfill');\n  } else {\n    var state = new VisibilityState(el, value, vnode);\n    el._vue_visibilityState = state;\n  }\n}\n\nfunction update(el, _ref3, vnode) {\n  var value = _ref3.value,\n      oldValue = _ref3.oldValue;\n  if (deepEqual(value, oldValue)) return;\n  var state = el._vue_visibilityState;\n\n  if (!value) {\n    unbind(el);\n    return;\n  }\n\n  if (state) {\n    state.createObserver(value, vnode);\n  } else {\n    bind(el, {\n      value: value\n    }, vnode);\n  }\n}\n\nfunction unbind(el) {\n  var state = el._vue_visibilityState;\n\n  if (state) {\n    state.destroyObserver();\n    delete el._vue_visibilityState;\n  }\n}\n\nvar ObserveVisibility = {\n  bind: bind,\n  update: update,\n  unbind: unbind\n};\n\nfunction install(Vue) {\n  Vue.directive('observe-visibility', ObserveVisibility);\n  /* -- Add more components here -- */\n}\n/* -- Plugin definition & Auto-install -- */\n\n/* You shouldn't have to modify the code below */\n// Plugin\n\nvar plugin = {\n  // eslint-disable-next-line no-undef\n  version: \"0.4.6\",\n  install: install\n};\n\nvar GlobalVue = null;\n\nif (typeof window !== 'undefined') {\n  GlobalVue = window.Vue;\n} else if (typeof global !== 'undefined') {\n  GlobalVue = global.Vue;\n}\n\nif (GlobalVue) {\n  GlobalVue.use(plugin);\n}\n\nexport default plugin;\nexport { ObserveVisibility, install };\n","(function (root, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([], factory);\n  } else if (typeof module === \"object\" && module.exports) {\n    module.exports = factory();\n  } else {\n    root.Scrollparent = factory();\n  }\n}(this, function () {\n  var regex = /(auto|scroll)/;\n\n  var parents = function (node, ps) {\n    if (node.parentNode === null) { return ps; }\n\n    return parents(node.parentNode, ps.concat([node]));\n  };\n\n  var style = function (node, prop) {\n    return getComputedStyle(node, null).getPropertyValue(prop);\n  };\n\n  var overflow = function (node) {\n    return style(node, \"overflow\") + style(node, \"overflow-y\") + style(node, \"overflow-x\");\n  };\n\n  var scroll = function (node) {\n   return regex.test(overflow(node));\n  };\n\n  var scrollParent = function (node) {\n    if (!(node instanceof HTMLElement || node instanceof SVGElement)) {\n      return ;\n    }\n\n    var ps = parents(node.parentNode, []);\n\n    for (var i = 0; i < ps.length; i += 1) {\n      if (scroll(ps[i])) {\n        return ps[i];\n      }\n    }\n\n    return document.scrollingElement || document.documentElement;\n  };\n\n  return scrollParent;\n}));\n","export const props = {\n  items: {\n    type: Array,\n    required: true,\n  },\n\n  keyField: {\n    type: String,\n    default: 'id',\n  },\n\n  direction: {\n    type: String,\n    default: 'vertical',\n    validator: (value) => ['vertical', 'horizontal'].includes(value),\n  },\n\n  listTag: {\n    type: String,\n    default: 'div',\n  },\n\n  itemTag: {\n    type: String,\n    default: 'div',\n  },\n\n  disabled: {\n    type: Boolean,\n    default: false\n  },\n}\n\nexport function simpleArray () {\n  return this.items.length && typeof this.items[0] !== 'object'\n}\n","export let supportsPassive = false\n\nif (typeof window !== 'undefined') {\n  supportsPassive = false\n  try {\n    var opts = Object.defineProperty({}, 'passive', {\n      get () {\n        supportsPassive = true\n      },\n    })\n    window.addEventListener('test', null, opts)\n  } catch (e) {}\n}\n","<template>\n  <div\n    v-observe-visibility=\"handleVisibilityChange\"\n    ref=\"root\"\n    class=\"vue-recycle-scroller\"\n    :class=\"{\n      ready,\n      'page-mode': pageMode,\n      [`direction-${direction}`]: true,\n    }\"\n    :style=\"scrollerStyle\"\n    @scroll.passive=\"handleScroll\"\n  >\n    <div\n      v-if=\"$slots.before\"\n      ref=\"before\"\n      class=\"vue-recycle-scroller__slot\"\n    >\n      <slot\n        name=\"before\"\n      />\n    </div>\n\n    <component\n      :is=\"listTag\"\n      ref=\"wrapper\"\n      :style=\"{ [direction === 'vertical' ? 'minHeight' : 'minWidth']: totalSize + 'px' }\"\n      class=\"vue-recycle-scroller__item-wrapper\"\n      :class=\"listClass\"\n    >\n      <component\n        :is=\"itemTag\"\n        v-for=\"view of pool\"\n        :key=\"view.nr.id\"\n        :style=\"ready ? {\n          transform: `translate${direction === 'vertical' ? 'Y' : 'X'}(${view.position}px) translate${direction === 'vertical' ? 'X' : 'Y'}(${view.offset}px)`,\n          width: gridItems ? `${direction === 'vertical' ? itemSecondarySize || itemSize : itemSize}px` : undefined,\n          height: gridItems ? `${direction === 'horizontal' ? itemSecondarySize || itemSize : itemSize}px` : undefined,\n        } : null\"\n        class=\"vue-recycle-scroller__item-view\"\n        :class=\"[\n          itemClass,\n          {\n            hover: !skipHover && hoverKey === view.nr.key\n          },\n        ]\"\n        v-on=\"skipHover ? {} : {\n          mouseenter: () => { hoverKey = view.nr.key },\n          mouseleave: () => { hoverKey = null },\n        }\"\n      >\n        <slot\n          :item=\"view.item\"\n          :index=\"view.nr.index\"\n          :active=\"view.nr.used\"\n        />\n      </component>\n\n      <slot\n        name=\"empty\"\n      />\n    </component>\n\n    <div\n      v-if=\"$slots.after\"\n      ref=\"after\"\n      class=\"vue-recycle-scroller__slot\"\n    >\n      <slot\n        name=\"after\"\n      />\n    </div>\n\n    <ResizeObserver @notify=\"handleResize\" />\n  </div>\n</template>\n\n<script>\nimport { ResizeObserver } from 'vue-resize'\nimport { ObserveVisibility } from 'vue-observe-visibility'\nimport ScrollParent from 'scrollparent'\nimport config from '../config'\nimport { props, simpleArray } from './common'\nimport { supportsPassive } from '../utils'\n\nlet uid = 0\n\nexport default {\n  name: 'RecycleScroller',\n\n  components: {\n    ResizeObserver,\n  },\n\n  directives: {\n    ObserveVisibility,\n  },\n\n  props: {\n    ...props,\n\n    itemSize: {\n      type: Number,\n      default: null,\n    },\n\n    gridItems: {\n      type: Number,\n      default: undefined,\n    },\n\n    itemSecondarySize: {\n      type: Number,\n      default: undefined,\n    },\n\n    minItemSize: {\n      type: [Number, String],\n      default: null,\n    },\n\n    sizeField: {\n      type: String,\n      default: 'size',\n    },\n\n    typeField: {\n      type: String,\n      default: 'type',\n    },\n\n    buffer: {\n      type: Number,\n      default: 200,\n    },\n\n    pageMode: {\n      type: Boolean,\n      default: false,\n    },\n\n    prerender: {\n      type: Number,\n      default: 0,\n    },\n\n    emitUpdate: {\n      type: Boolean,\n      default: false,\n    },\n\n    skipHover: {\n      type: Boolean,\n      default: false,\n    },\n\n    listTag: {\n      type: String,\n      default: 'div',\n    },\n\n    itemTag: {\n      type: String,\n      default: 'div',\n    },\n\n    listClass: {\n      type: [String, Object, Array],\n      default: '',\n    },\n\n    itemClass: {\n      type: [String, Object, Array],\n      default: '',\n    },\n  },\n\n  data () {\n    return {\n      pool: [],\n      totalSize: 0,\n      ready: false,\n      hoverKey: null,\n    }\n  },\n\n  computed: {\n    sizes () {\n      if (this.itemSize === null) {\n        const sizes = {\n          '-1': { accumulator: 0 },\n        }\n        const items = this.items\n        const field = this.sizeField\n        const minItemSize = this.minItemSize\n        let computedMinSize = 10000\n        let accumulator = 0\n        let current\n        for (let i = 0, l = items.length; i < l; i++) {\n          current = items[i][field] || minItemSize\n          if (current < computedMinSize) {\n            computedMinSize = current\n          }\n          accumulator += current\n          sizes[i] = { accumulator, size: current }\n        }\n        // eslint-disable-next-line\n        this.$_computedMinItemSize = computedMinSize\n        return sizes\n      }\n      return []\n    },\n\n    simpleArray,\n\n    scrollerStyle () {\n      if (this.disabled) {\n        return {\n          overflow: 'hidden',\n        }\n      } else {\n        return null\n      }\n    },\n  },\n\n  watch: {\n    items () {\n      this.updateVisibleItems(true)\n    },\n\n    pageMode () {\n      this.applyPageMode()\n      this.updateVisibleItems(false)\n    },\n\n    sizes: {\n      handler () {\n        this.updateVisibleItems(false)\n      },\n      deep: true,\n    },\n\n    gridItems () {\n      this.updateVisibleItems(true)\n    },\n\n    itemSecondarySize () {\n      this.updateVisibleItems(true)\n    },\n  },\n\n  created () {\n    this.$_startIndex = 0\n    this.$_endIndex = 0\n    this.$_views = new Map()\n    this.$_unusedViews = new Map()\n    this.$_scrollDirty = false\n    this.$_lastUpdateScrollPosition = 0\n\n    // In SSR mode, we also prerender the same number of item for the first render\n    // to avoir mismatch between server and client templates\n    if (this.prerender) {\n      this.$_prerender = true\n      this.updateVisibleItems(false)\n    }\n\n    if (this.gridItems && !this.itemSize) {\n      console.error('[vue-recycle-scroller] You must provide an itemSize when using gridItems')\n    }\n  },\n\n  mounted () {\n    this.applyPageMode()\n    this.$nextTick(() => {\n      // In SSR mode, render the real number of visible items\n      this.$_prerender = false\n      this.updateVisibleItems(true)\n      this.ready = true\n    })\n  },\n\n  activated () {\n    const lastPosition = this.$_lastUpdateScrollPosition\n    if (typeof lastPosition === 'number') {\n      this.$nextTick(() => {\n        this.scrollToPosition(lastPosition)\n      })\n    }\n  },\n\n  beforeDestroy () {\n    this.removeListeners()\n  },\n\n  methods: {\n    addView (pool, index, item, key, type) {\n      const view = {\n        item,\n        position: 0,\n      }\n      const nonReactive = {\n        id: uid++,\n        index,\n        used: true,\n        key,\n        type,\n      }\n      Object.defineProperty(view, 'nr', {\n        configurable: false,\n        value: nonReactive,\n      })\n      pool.push(view)\n      return view\n    },\n\n    unuseView (view, fake = false) {\n      const unusedViews = this.$_unusedViews\n      const type = view.nr.type\n      let unusedPool = unusedViews.get(type)\n      if (!unusedPool) {\n        unusedPool = []\n        unusedViews.set(type, unusedPool)\n      }\n      unusedPool.push(view)\n      if (!fake) {\n        view.nr.used = false\n        view.position = -9999\n        this.$_views.delete(view.nr.key)\n      }\n    },\n\n    handleResize () {\n      this.$emit('resize')\n      if (this.ready) this.updateVisibleItems(false)\n    },\n\n    handleScroll (event) {\n      if (this.disabled) {\n        return\n      }\n      if (!this.$_scrollDirty) {\n        this.$_scrollDirty = true\n        requestAnimationFrame(() => {\n          this.$_scrollDirty = false\n          const { continuous } = this.updateVisibleItems(false, true)\n\n          // It seems sometimes chrome doesn't fire scroll event :/\n          // When non continous scrolling is ending, we force a refresh\n          if (!continuous) {\n            clearTimeout(this.$_refreshTimout)\n            this.$_refreshTimout = setTimeout(this.handleScroll, 100)\n          }\n        })\n      }\n      this.$emit('scroll', event)\n    },\n\n    handleVisibilityChange (isVisible, entry) {\n      if (this.ready) {\n        if (isVisible || entry.boundingClientRect.width !== 0 || entry.boundingClientRect.height !== 0) {\n          this.$emit('visible')\n          requestAnimationFrame(() => {\n            this.updateVisibleItems(false)\n          })\n        } else {\n          this.$emit('hidden')\n        }\n      }\n    },\n\n    updateVisibleItems (checkItem, checkPositionDiff = false) {\n      const itemSize = this.itemSize\n      const gridItems = this.gridItems || 1\n      const itemSecondarySize = this.itemSecondarySize || itemSize\n      const minItemSize = this.$_computedMinItemSize\n      const typeField = this.typeField\n      const keyField = this.simpleArray ? null : this.keyField\n      const items = this.items\n      const count = items.length\n      const sizes = this.sizes\n      const views = this.$_views\n      const unusedViews = this.$_unusedViews\n      const pool = this.pool\n      let startIndex, endIndex\n      let totalSize\n      let visibleStartIndex, visibleEndIndex\n\n      if (!count) {\n        startIndex = endIndex = visibleStartIndex = visibleEndIndex = totalSize = 0\n      } else if (this.$_prerender) {\n        startIndex = visibleStartIndex = 0\n        endIndex = visibleEndIndex = Math.min(this.prerender, items.length)\n        totalSize = null\n      } else {\n        const scroll = this.getScroll()\n\n        // Skip update if use hasn't scrolled enough\n        if (checkPositionDiff) {\n          let positionDiff = scroll.start - this.$_lastUpdateScrollPosition\n          if (positionDiff < 0) positionDiff = -positionDiff\n          if ((itemSize === null && positionDiff < minItemSize) || positionDiff < itemSize) {\n            return {\n              continuous: true,\n            }\n          }\n        }\n        this.$_lastUpdateScrollPosition = scroll.start\n\n        const buffer = this.buffer\n        scroll.start -= buffer\n        scroll.end += buffer\n\n        // account for leading slot\n        let beforeSize = 0\n        if (this.$refs.before) {\n          beforeSize = this.$refs.before.scrollHeight\n          scroll.start -= beforeSize\n        }\n\n        // account for trailing slot\n        if (this.$refs.after) {\n          const afterSize = this.$refs.after.scrollHeight\n          scroll.end += afterSize\n        }\n\n        // Variable size mode\n        if (itemSize === null) {\n          let h\n          let a = 0\n          let b = count - 1\n          let i = ~~(count / 2)\n          let oldI\n\n          // Searching for startIndex\n          do {\n            oldI = i\n            h = sizes[i].accumulator\n            if (h < scroll.start) {\n              a = i\n            } else if (i < count - 1 && sizes[i + 1].accumulator > scroll.start) {\n              b = i\n            }\n            i = ~~((a + b) / 2)\n          } while (i !== oldI)\n          i < 0 && (i = 0)\n          startIndex = i\n\n          // For container style\n          totalSize = sizes[count - 1].accumulator\n\n          // Searching for endIndex\n          for (endIndex = i; endIndex < count && sizes[endIndex].accumulator < scroll.end; endIndex++);\n          if (endIndex === -1) {\n            endIndex = items.length - 1\n          } else {\n            endIndex++\n            // Bounds\n            endIndex > count && (endIndex = count)\n          }\n\n          // search visible startIndex\n          for (visibleStartIndex = startIndex; visibleStartIndex < count && (beforeSize + sizes[visibleStartIndex].accumulator) < scroll.start; visibleStartIndex++);\n\n          // search visible endIndex\n          for (visibleEndIndex = visibleStartIndex; visibleEndIndex < count && (beforeSize + sizes[visibleEndIndex].accumulator) < scroll.end; visibleEndIndex++);\n        } else {\n          // Fixed size mode\n          startIndex = ~~(scroll.start / itemSize * gridItems)\n          const remainer = startIndex % gridItems\n          startIndex -= remainer\n          endIndex = Math.ceil(scroll.end / itemSize * gridItems)\n          visibleStartIndex = Math.max(0, Math.floor((scroll.start - beforeSize) / itemSize * gridItems))\n          visibleEndIndex = Math.floor((scroll.end - beforeSize) / itemSize * gridItems)\n\n          // Bounds\n          startIndex < 0 && (startIndex = 0)\n          endIndex > count && (endIndex = count)\n          visibleStartIndex < 0 && (visibleStartIndex = 0)\n          visibleEndIndex > count && (visibleEndIndex = count)\n\n          totalSize = Math.ceil(count / gridItems) * itemSize\n        }\n      }\n\n      if (endIndex - startIndex > config.itemsLimit) {\n        this.itemsLimitError()\n      }\n\n      this.totalSize = totalSize\n\n      let view\n\n      const continuous = startIndex <= this.$_endIndex && endIndex >= this.$_startIndex\n\n      if (this.$_continuous !== continuous) {\n        if (continuous) {\n          views.clear()\n          unusedViews.clear()\n          for (let i = 0, l = pool.length; i < l; i++) {\n            view = pool[i]\n            this.unuseView(view)\n          }\n        }\n        this.$_continuous = continuous\n      } else if (continuous) {\n        for (let i = 0, l = pool.length; i < l; i++) {\n          view = pool[i]\n          if (view.nr.used) {\n            // Update view item index\n            if (checkItem) {\n              view.nr.index = items.indexOf(view.item)\n            }\n\n            // Check if index is still in visible range\n            if (\n              view.nr.index === -1 ||\n              view.nr.index < startIndex ||\n              view.nr.index >= endIndex\n            ) {\n              this.unuseView(view)\n            }\n          }\n        }\n      }\n\n      const unusedIndex = continuous ? null : new Map()\n\n      let item, type, unusedPool\n      let v\n      for (let i = startIndex; i < endIndex; i++) {\n        item = items[i]\n        const key = keyField ? item[keyField] : item\n        if (key == null) {\n          throw new Error(`Key is ${key} on item (keyField is '${keyField}')`)\n        }\n        view = views.get(key)\n\n        if (!itemSize && !sizes[i].size) {\n          if (view) this.unuseView(view)\n          continue\n        }\n\n        // No view assigned to item\n        if (!view) {\n          if (i === items.length - 1) this.$emit('scroll-end')\n          if (i === 0) this.$emit('scroll-start')\n\n          type = item[typeField]\n          unusedPool = unusedViews.get(type)\n\n          if (continuous) {\n            // Reuse existing view\n            if (unusedPool && unusedPool.length) {\n              view = unusedPool.pop()\n              view.item = item\n              view.nr.used = true\n              view.nr.index = i\n              view.nr.key = key\n              view.nr.type = type\n            } else {\n              view = this.addView(pool, i, item, key, type)\n            }\n          } else {\n            // Use existing view\n            // We don't care if they are already used\n            // because we are not in continous scrolling\n            v = unusedIndex.get(type) || 0\n\n            if (!unusedPool || v >= unusedPool.length) {\n              view = this.addView(pool, i, item, key, type)\n              this.unuseView(view, true)\n              unusedPool = unusedViews.get(type)\n            }\n\n            view = unusedPool[v]\n            view.item = item\n            view.nr.used = true\n            view.nr.index = i\n            view.nr.key = key\n            view.nr.type = type\n            unusedIndex.set(type, v + 1)\n            v++\n          }\n          views.set(key, view)\n        } else {\n          view.nr.used = true\n          view.item = item\n        }\n\n        // Update position\n        if (itemSize === null) {\n          view.position = sizes[i - 1].accumulator\n          view.offset = 0\n        } else {\n          view.position = Math.floor(i / gridItems) * itemSize\n          view.offset = (i % gridItems) * itemSecondarySize\n        }\n      }\n\n      this.$_startIndex = startIndex\n      this.$_endIndex = endIndex\n\n      if (this.emitUpdate) this.$emit('update', startIndex, endIndex, visibleStartIndex, visibleEndIndex)\n\n      // After the user has finished scrolling\n      // Sort views so text selection is correct\n      clearTimeout(this.$_sortTimer)\n      this.$_sortTimer = setTimeout(this.sortViews, 300)\n\n      return {\n        continuous,\n      }\n    },\n\n    getListenerTarget () {\n      let target = ScrollParent(this.$el)\n      // Fix global scroll target for Chrome and Safari\n      if (window.document && (target === window.document.documentElement || target === window.document.body)) {\n        target = window\n      }\n      return target\n    },\n\n    getScroll () {\n      const { $el: el, direction } = this\n      const isVertical = direction === 'vertical'\n      let scrollState\n\n      if (this.pageMode) {\n        const bounds = el.getBoundingClientRect()\n        const boundsSize = isVertical ? bounds.height : bounds.width\n        let start = -(isVertical ? bounds.top : bounds.left)\n        let size = isVertical ? window.innerHeight : window.innerWidth\n        if (start < 0) {\n          size += start\n          start = 0\n        }\n        if (start + size > boundsSize) {\n          size = boundsSize - start\n        }\n        scrollState = {\n          start,\n          end: start + size,\n        }\n      } else if (isVertical) {\n        scrollState = {\n          start: el.scrollTop,\n          end: el.scrollTop + el.clientHeight,\n        }\n      } else {\n        scrollState = {\n          start: el.scrollLeft,\n          end: el.scrollLeft + el.clientWidth,\n        }\n      }\n\n      return scrollState\n    },\n\n    applyPageMode () {\n      if (this.pageMode) {\n        this.addListeners()\n      } else {\n        this.removeListeners()\n      }\n    },\n\n    addListeners () {\n      this.listenerTarget = this.getListenerTarget()\n      this.listenerTarget.addEventListener('scroll', this.handleScroll, supportsPassive\n        ? {\n            passive: true,\n          }\n        : false)\n      this.listenerTarget.addEventListener('resize', this.handleResize)\n    },\n\n    removeListeners () {\n      if (!this.listenerTarget) {\n        return\n      }\n\n      this.listenerTarget.removeEventListener('scroll', this.handleScroll)\n      this.listenerTarget.removeEventListener('resize', this.handleResize)\n\n      this.listenerTarget = null\n    },\n\n    scrollToItem (index, offset) {\n      let scroll\n      if (this.itemSize === null) {\n        scroll = index > 0 ? this.sizes[index - 1].accumulator : 0\n      } else {\n        scroll = Math.floor(index / this.gridItems) * this.itemSize\n      }\n      if (typeof offset === \"number\") {\n        scroll += parseInt(offset)\n      }\n      this.scrollToPosition(scroll)\n    },\n\n    scrollToPosition (position) {\n      const direction = this.direction === 'vertical'\n        ? { scroll: 'scrollTop', start: 'top' }\n        : { scroll: 'scrollLeft', start: 'left' }\n\n      let viewport\n      let scrollDirection\n      let scrollDistance\n\n      if (this.pageMode) {\n        const viewportEl = ScrollParent(this.$el)\n        // HTML doesn't overflow like other elements\n        const scrollTop = viewportEl.tagName === 'HTML' ? 0 : viewportEl[direction.scroll]\n        const bounds = viewportEl.getBoundingClientRect()\n\n        const scroller = this.$el.getBoundingClientRect()\n        const scrollerPosition = scroller[direction.start] - bounds[direction.start]\n\n        viewport = viewportEl\n        scrollDirection = direction.scroll\n        scrollDistance = position + scrollTop + scrollerPosition\n      } else {\n        viewport = this.$el\n        scrollDirection = direction.scroll\n        scrollDistance = position\n      }\n\n      viewport[scrollDirection] = scrollDistance\n    },\n\n    getItemPosition (index) {\n      let scroll\n      if (this.itemSize === null) {\n        scroll = index > 0 ? this.sizes[index - 1].accumulator : 0\n      } else {\n        scroll = Math.floor(index / this.gridItems) * this.itemSize\n      }\n      if (this.pageMode) {\n        const direction = this.direction === 'vertical'\n          ? { scroll: 'scrollTop', start: 'top' }\n          : { scroll: 'scrollLeft', start: 'left' }\n\n        const viewportEl = ScrollParent(this.$el)\n        // HTML doesn't overflow like other elements\n        const scrollTop = viewportEl.tagName === 'HTML' ? 0 : viewportEl[direction.scroll]\n        const bounds = viewportEl.getBoundingClientRect()\n\n        const scroller = this.$el.getBoundingClientRect()\n        const scrollerPosition = scroller[direction.start] - bounds[direction.start]\n\n        return scroll + scrollTop + scrollerPosition\n      }\n      return scroll\n    },\n\n    getItemSize (index) {\n      let size\n      if (this.itemSize === null) {\n        size = index > 0 ? this.sizes[index - 1].size : 0\n      } else {\n        size = this.itemSize\n      }\n      return size\n    },\n\n    // return current scroll offset\n    getOffset () {\n      const key = this.direction === 'horizontal' ? 'scrollLeft' : 'scrollTop'\n      if (this.pageMode) {\n        return document.documentElement[key] || document.body[key]\n      } else {\n          const {root} = this.$refs\n        return root ? Math.ceil(root[key]) : 0\n      }\n    },\n\n    // return client viewport size\n    getClientSize () {\n      const key = this.direction === 'horizontal' ? 'clientWidth' : 'clientHeight'\n      if (this.pageMode) {\n        return document.documentElement[key] || document.body[key]\n      } else {\n        const {root} = this.$refs\n        return root ? Math.ceil(root[key]) : 0\n      }\n    },\n\n    // return all scroll size\n    getScrollSize () {\n      const key = this.direction === 'horizontal' ? 'scrollWidth' : 'scrollHeight'\n      if (this.pageMode) {\n        return document.documentElement[key] || document.body[key]\n      } else {\n        const {root} = this.$refs\n        return root ? Math.ceil(root[key]) : 0\n      }\n    },\n\n    scrollInfo () {\n      const clientSize = this.getClientSize()\n      const offset = this.getOffset()\n      const scrollSize = this.getScrollSize()\n      return {\n        offset, // 滚动的距离\n        scale: offset ? (offset / (scrollSize - clientSize)) : 0, // 已滚动比例\n        tail: scrollSize - clientSize - offset // 与底部距离\n      }\n    },\n\n    itemsLimitError () {\n      setTimeout(() => {\n        console.log('It seems the scroller element isn\\'t scrolling, so it tries to render all the items at once.', 'Scroller:', this.$el)\n        console.log('Make sure the scroller has a fixed height (or width) and \\'overflow-y\\' (or \\'overflow-x\\') set to \\'auto\\' so it can scroll correctly and only render the items visible in the scroll viewport.')\n      })\n      throw new Error('Rendered items limit reached')\n    },\n\n    sortViews () {\n      this.pool.sort((viewA, viewB) => viewA.nr.index - viewB.nr.index)\n    },\n  },\n}\n</script>\n\n<style>\n.vue-recycle-scroller {\n  position: relative;\n}\n\n.vue-recycle-scroller.direction-vertical:not(.page-mode) {\n  overflow-y: auto;\n}\n\n.vue-recycle-scroller.direction-horizontal:not(.page-mode) {\n  overflow-x: auto;\n}\n\n.vue-recycle-scroller.direction-horizontal {\n  display: flex;\n}\n\n.vue-recycle-scroller__slot {\n  flex: auto 0 0;\n}\n\n.vue-recycle-scroller__item-wrapper {\n  flex: 1;\n  box-sizing: border-box;\n  overflow: hidden;\n  position: relative;\n}\n\n.vue-recycle-scroller.ready .vue-recycle-scroller__item-view {\n  position: absolute;\n  top: 0;\n  left: 0;\n  will-change: transform;\n}\n\n.vue-recycle-scroller.direction-vertical .vue-recycle-scroller__item-wrapper {\n  width: 100%;\n}\n\n.vue-recycle-scroller.direction-horizontal .vue-recycle-scroller__item-wrapper {\n  height: 100%;\n}\n\n.vue-recycle-scroller.ready.direction-vertical .vue-recycle-scroller__item-view {\n  width: 100%;\n}\n\n.vue-recycle-scroller.ready.direction-horizontal .vue-recycle-scroller__item-view {\n  height: 100%;\n}\n</style>\n","function normalizeComponent(template, style, script, scopeId, isFunctionalTemplate, moduleIdentifier /* server only */, shadowMode, createInjector, createInjectorSSR, createInjectorShadow) {\r\n    if (typeof shadowMode !== 'boolean') {\r\n        createInjectorSSR = createInjector;\r\n        createInjector = shadowMode;\r\n        shadowMode = false;\r\n    }\r\n    // Vue.extend constructor export interop.\r\n    const options = typeof script === 'function' ? script.options : script;\r\n    // render functions\r\n    if (template && template.render) {\r\n        options.render = template.render;\r\n        options.staticRenderFns = template.staticRenderFns;\r\n        options._compiled = true;\r\n        // functional template\r\n        if (isFunctionalTemplate) {\r\n            options.functional = true;\r\n        }\r\n    }\r\n    // scopedId\r\n    if (scopeId) {\r\n        options._scopeId = scopeId;\r\n    }\r\n    let hook;\r\n    if (moduleIdentifier) {\r\n        // server build\r\n        hook = function (context) {\r\n            // 2.3 injection\r\n            context =\r\n                context || // cached call\r\n                    (this.$vnode && this.$vnode.ssrContext) || // stateful\r\n                    (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext); // functional\r\n            // 2.2 with runInNewContext: true\r\n            if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\r\n                context = __VUE_SSR_CONTEXT__;\r\n            }\r\n            // inject component styles\r\n            if (style) {\r\n                style.call(this, createInjectorSSR(context));\r\n            }\r\n            // register component module identifier for async chunk inference\r\n            if (context && context._registeredComponents) {\r\n                context._registeredComponents.add(moduleIdentifier);\r\n            }\r\n        };\r\n        // used by ssr in case component is cached and beforeCreate\r\n        // never gets called\r\n        options._ssrRegister = hook;\r\n    }\r\n    else if (style) {\r\n        hook = shadowMode\r\n            ? function (context) {\r\n                style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot));\r\n            }\r\n            : function (context) {\r\n                style.call(this, createInjector(context));\r\n            };\r\n    }\r\n    if (hook) {\r\n        if (options.functional) {\r\n            // register for functional component in vue file\r\n            const originalRender = options.render;\r\n            options.render = function renderWithStyleInjection(h, context) {\r\n                hook.call(context);\r\n                return originalRender(h, context);\r\n            };\r\n        }\r\n        else {\r\n            // inject component registration as beforeCreate hook\r\n            const existing = options.beforeCreate;\r\n            options.beforeCreate = existing ? [].concat(existing, hook) : [hook];\r\n        }\r\n    }\r\n    return script;\r\n}\n\nexport default normalizeComponent;\n//# sourceMappingURL=normalize-component.mjs.map\n","<template>\n  <RecycleScroller\n    ref=\"scroller\"\n    :items=\"itemsWithSize\"\n    :min-item-size=\"minItemSize\"\n    :direction=\"direction\"\n    key-field=\"id\"\n    :list-tag=\"listTag\"\n    :item-tag=\"itemTag\"\n    v-bind=\"$attrs\"\n    @resize=\"onScrollerResize\"\n    @visible=\"onScrollerVisible\"\n    v-on=\"listeners\"\n  >\n    <template slot-scope=\"{ item: itemWithSize, index, active }\">\n      <slot\n        v-bind=\"{\n          item: itemWithSize.item,\n          index,\n          active,\n          itemWithSize\n        }\"\n      />\n    </template>\n    <template slot=\"before\">\n      <slot name=\"before\" />\n    </template>\n    <template slot=\"after\">\n      <slot name=\"after\" />\n    </template>\n    <template slot=\"empty\">\n      <slot name=\"empty\" />\n    </template>\n  </RecycleScroller>\n</template>\n\n<script>\nimport RecycleScroller from './RecycleScroller.vue'\nimport { props, simpleArray } from './common'\n\nexport default {\n  name: 'DynamicScroller',\n\n  components: {\n    RecycleScroller,\n  },\n\n  provide () {\n    if (typeof ResizeObserver !== 'undefined') {\n      this.$_resizeObserver = new ResizeObserver(entries => {\n        requestAnimationFrame(() => {\n          if (!Array.isArray(entries)) {\n            return\n          }\n          for (const entry of entries) {\n            if (entry.target) {\n              const event = new CustomEvent(\n                'resize',\n                {\n                  detail: {\n                    contentRect: entry.contentRect,\n                  },\n                },\n              )\n              entry.target.dispatchEvent(event)\n            }\n          }\n        })\n      })\n    }\n\n    return {\n      vscrollData: this.vscrollData,\n      vscrollParent: this,\n      vscrollResizeObserver: this.$_resizeObserver,\n    }\n  },\n\n  inheritAttrs: false,\n\n  props: {\n    ...props,\n\n    minItemSize: {\n      type: [Number, String],\n      required: true,\n    },\n  },\n\n  data () {\n    return {\n      vscrollData: {\n        active: true,\n        sizes: {},\n        validSizes: {},\n        keyField: this.keyField,\n        simpleArray: false,\n      },\n    }\n  },\n\n  computed: {\n    simpleArray,\n\n    itemsWithSize () {\n      const result = []\n      const { items, keyField, simpleArray } = this\n      const sizes = this.vscrollData.sizes\n      const l = items.length\n      for (let i = 0; i < l; i++) {\n        const item = items[i]\n        const id = simpleArray ? i : item[keyField]\n        let size = sizes[id]\n        if (typeof size === 'undefined' && !this.$_undefinedMap[id]) {\n          size = 0\n        }\n        result.push({\n          item,\n          id,\n          size,\n        })\n      }\n      return result\n    },\n\n    listeners () {\n      const listeners = {}\n      for (const key in this.$listeners) {\n        if (key !== 'resize' && key !== 'visible') {\n          listeners[key] = this.$listeners[key]\n        }\n      }\n      return listeners\n    },\n  },\n\n  watch: {\n    items () {\n      this.forceUpdate(false)\n    },\n\n    simpleArray: {\n      handler (value) {\n        this.vscrollData.simpleArray = value\n      },\n      immediate: true,\n    },\n\n    direction (value) {\n      this.forceUpdate(true)\n    },\n\n    itemsWithSize (next, prev) {\n      const scrollTop = this.$el.scrollTop\n\n      // Calculate total diff between prev and next sizes\n      // over current scroll top. Then add it to scrollTop to\n      // avoid jumping the contents that the user is seeing.\n      let prevActiveTop = 0; let activeTop = 0\n      const length = Math.min(next.length, prev.length)\n      for (let i = 0; i < length; i++) {\n        if (prevActiveTop >= scrollTop) {\n          break\n        }\n        prevActiveTop += prev[i].size || this.minItemSize\n        activeTop += next[i].size || this.minItemSize\n      }\n      const offset = activeTop - prevActiveTop\n\n      if (offset === 0) {\n        return\n      }\n\n      this.$el.scrollTop += offset\n    },\n  },\n\n  beforeCreate () {\n    this.$_updates = []\n    this.$_undefinedSizes = 0\n    this.$_undefinedMap = {}\n  },\n\n  activated () {\n    this.vscrollData.active = true\n  },\n\n  deactivated () {\n    this.vscrollData.active = false\n  },\n\n  methods: {\n    onScrollerResize () {\n      if (this.$refs.scroller) {\n        this.forceUpdate()\n      }\n      this.$emit('resize')\n    },\n\n    onScrollerVisible () {\n      this.$emit('vscroll:update', { force: false })\n      this.$emit('visible')\n    },\n\n    onScrollerScroll (event) {\n      this.$emit('scroll', event)\n    },\n\n    forceUpdate (clear = true) {\n      if (clear || this.simpleArray) {\n        this.vscrollData.validSizes = {}\n      }\n      this.$emit('vscroll:update', { force: true })\n    },\n\n    scrollToItem (index, offset) {\n      this.$refs.scroller.scrollToItem(index, offset)\n    },\n\n    scrollToPosition (position) {\n      this.$refs.scroller.scrollToPosition(position)\n    },\n\n    getItemPosition (index) {\n      return this.$refs.scroller.getItemPosition(index)\n    },\n\n    getOffset () {\n      return this.$refs.scroller.getOffset()\n    },\n\n    getClientSize () {\n      return this.$refs.scroller.getClientSize()\n    },\n\n    getScrollSize () {\n      return this.$refs.scroller.getScrollSize()\n    },\n\n    scrollInfo () {\n      return this.$refs.scroller.scrollInfo()\n    },\n\n    getItemSize (index) {\n      return this.$refs.scroller.getItemSize(index)\n    },\n\n    scrollToBottom () {\n      if (this.$_scrollingToBottom) return\n      this.$_scrollingToBottom = true\n      const el = this.$el\n      // Item is inserted to the DOM\n      this.$nextTick(() => {\n        el.scrollTop = el.scrollHeight + 5000\n        // Item sizes are computed\n        const cb = () => {\n          el.scrollTop = el.scrollHeight + 5000\n          requestAnimationFrame(() => {\n            el.scrollTop = el.scrollHeight + 5000\n            if (this.$_undefinedSizes === 0) {\n              this.$_scrollingToBottom = false\n            } else {\n              requestAnimationFrame(cb)\n            }\n          })\n        }\n        requestAnimationFrame(cb)\n      })\n    },\n\n    pauseScrollInsert (asynch) {\n      return new Promise(resolve => {\n        const {scroller} = this.$refs\n        //\n        let offset = scroller.getOffset()\n        let index = scroller.$_startIndex || 0\n        let diff = 0\n        while (diff >= 0) {\n          let tmp = offset - scroller.getItemPosition(index)\n          if (diff === tmp) {\n            break\n          }\n          diff = tmp\n          index++\n        }\n        const beforeLength = this.items.length\n        const keyValue = index < beforeLength ? this.items[index][this.keyField] : null\n        //\n        const result = _ => {\n          requestAnimationFrame(_ => {\n            if (keyValue) {\n              index = this.items.findIndex(item => item[this.keyField] === keyValue)\n              if (offset > 0) index--\n            } else {\n              index += this.items.length - beforeLength\n            }\n            scroller.scrollToPosition(scroller.getItemPosition(Math.max(0, index)) + diff)\n          })\n        }\n        //\n        if (asynch) {\n          resolve(result)\n        } else {\n          resolve()\n          result()\n        }\n      })\n    }\n  },\n}\n</script>\n","<script>\nexport default {\n  name: 'DynamicScrollerItem',\n\n  inject: [\n    'vscrollData',\n    'vscrollParent',\n    'vscrollResizeObserver',\n  ],\n\n  props: {\n    // eslint-disable-next-line vue/require-prop-types\n    item: {\n      required: true,\n    },\n\n    watchData: {\n      type: Boolean,\n      default: false,\n    },\n\n    /**\n     * Indicates if the view is actively used to display an item.\n     */\n    active: {\n      type: Boolean,\n      required: true,\n    },\n\n    index: {\n      type: Number,\n      default: undefined,\n    },\n\n    sizeDependencies: {\n      type: [Array, Object],\n      default: null,\n    },\n\n    emitResize: {\n      type: Boolean,\n      default: false,\n    },\n\n    tag: {\n      type: String,\n      default: 'div',\n    },\n  },\n\n  computed: {\n    id () {\n      if (this.vscrollData.simpleArray) return this.index\n      // eslint-disable-next-line no-prototype-builtins\n      if (this.item.hasOwnProperty(this.vscrollData.keyField)) return this.item[this.vscrollData.keyField]\n      throw new Error(`keyField '${this.vscrollData.keyField}' not found in your item. You should set a valid keyField prop on your Scroller`)\n    },\n\n    size () {\n      return (this.vscrollData.validSizes[this.id] && this.vscrollData.sizes[this.id]) || 0\n    },\n\n    finalActive () {\n      return this.active && this.vscrollData.active\n    },\n  },\n\n  watch: {\n    watchData: 'updateWatchData',\n\n    id () {\n      if (!this.size) {\n        this.onDataUpdate()\n      }\n    },\n\n    finalActive (value) {\n      if (!this.size) {\n        if (value) {\n          if (!this.vscrollParent.$_undefinedMap[this.id]) {\n            this.vscrollParent.$_undefinedSizes++\n            this.vscrollParent.$_undefinedMap[this.id] = true\n          }\n        } else {\n          if (this.vscrollParent.$_undefinedMap[this.id]) {\n            this.vscrollParent.$_undefinedSizes--\n            this.vscrollParent.$_undefinedMap[this.id] = false\n          }\n        }\n      }\n\n      if (this.vscrollResizeObserver) {\n        if (value) {\n          this.observeSize()\n        } else {\n          this.unobserveSize()\n        }\n      } else if (value && this.$_pendingVScrollUpdate === this.id) {\n        this.updateSize()\n      }\n    },\n  },\n\n  created () {\n    if (this.$isServer) return\n\n    this.$_forceNextVScrollUpdate = null\n    this.updateWatchData()\n\n    if (!this.vscrollResizeObserver) {\n      for (const k in this.sizeDependencies) {\n        this.$watch(() => this.sizeDependencies[k], this.onDataUpdate)\n      }\n\n      this.vscrollParent.$on('vscroll:update', this.onVscrollUpdate)\n      this.vscrollParent.$on('vscroll:update-size', this.onVscrollUpdateSize)\n    }\n  },\n\n  mounted () {\n    if (this.vscrollData.active) {\n      this.updateSize()\n      this.observeSize()\n    }\n  },\n\n  beforeDestroy () {\n    this.vscrollParent.$off('vscroll:update', this.onVscrollUpdate)\n    this.vscrollParent.$off('vscroll:update-size', this.onVscrollUpdateSize)\n    this.unobserveSize()\n  },\n\n  methods: {\n    updateSize () {\n      if (this.finalActive) {\n        if (this.$_pendingSizeUpdate !== this.id) {\n          this.$_pendingSizeUpdate = this.id\n          this.$_forceNextVScrollUpdate = null\n          this.$_pendingVScrollUpdate = null\n          this.computeSize(this.id)\n        }\n      } else {\n        this.$_forceNextVScrollUpdate = this.id\n      }\n    },\n\n    updateWatchData () {\n      if (this.watchData && !this.vscrollResizeObserver) {\n        this.$_watchData = this.$watch('item', () => {\n          this.onDataUpdate()\n        }, {\n          deep: true,\n        })\n      } else if (this.$_watchData) {\n        this.$_watchData()\n        this.$_watchData = null\n      }\n    },\n\n    onVscrollUpdate ({ force }) {\n      // If not active, sechedule a size update when it becomes active\n      if (!this.finalActive && force) {\n        this.$_pendingVScrollUpdate = this.id\n      }\n\n      if (this.$_forceNextVScrollUpdate === this.id || force || !this.size) {\n        this.updateSize()\n      }\n    },\n\n    onDataUpdate () {\n      this.updateSize()\n    },\n\n    computeSize (id) {\n      this.$nextTick(() => {\n        if (this.id === id) {\n          const width = this.$el.offsetWidth\n          const height = this.$el.offsetHeight\n          this.applySize(width, height)\n        }\n        this.$_pendingSizeUpdate = null\n      })\n    },\n\n    applySize (width, height) {\n      const size = ~~(this.vscrollParent.direction === 'vertical' ? height : width)\n      if (size && this.size !== size) {\n        if (this.vscrollParent.$_undefinedMap[this.id]) {\n          this.vscrollParent.$_undefinedSizes--\n          this.vscrollParent.$_undefinedMap[this.id] = undefined\n        }\n        this.$set(this.vscrollData.sizes, this.id, size)\n        this.$set(this.vscrollData.validSizes, this.id, true)\n        if (this.emitResize) this.$emit('resize', this.id)\n      }\n    },\n\n    observeSize () {\n      if (!this.vscrollResizeObserver || !this.$el.parentNode) return\n      this.vscrollResizeObserver.observe(this.$el.parentNode)\n      this.$el.parentNode.addEventListener('resize', this.onResize)\n    },\n\n    unobserveSize () {\n      if (!this.vscrollResizeObserver) return\n      this.vscrollResizeObserver.unobserve(this.$el.parentNode)\n      this.$el.parentNode.removeEventListener('resize', this.onResize)\n    },\n\n    onResize (event) {\n      const { width, height } = event.detail.contentRect\n      this.applySize(width, height)\n    },\n  },\n\n  render (h) {\n    return h(this.tag, this.$slots.default)\n  },\n}\n</script>\n","import config from './config'\n\nimport RecycleScroller from './components/RecycleScroller.vue'\nimport DynamicScroller from './components/DynamicScroller.vue'\nimport DynamicScrollerItem from './components/DynamicScrollerItem.vue'\n\nexport { default as IdState } from './mixins/IdState'\n\nexport {\n  RecycleScroller,\n  DynamicScroller,\n  DynamicScrollerItem,\n}\n\nfunction registerComponents (Vue, prefix) {\n  Vue.component(`${prefix}recycle-scroller`, RecycleScroller)\n  Vue.component(`${prefix}RecycleScroller`, RecycleScroller)\n  Vue.component(`${prefix}dynamic-scroller`, DynamicScroller)\n  Vue.component(`${prefix}DynamicScroller`, DynamicScroller)\n  Vue.component(`${prefix}dynamic-scroller-item`, DynamicScrollerItem)\n  Vue.component(`${prefix}DynamicScrollerItem`, DynamicScrollerItem)\n}\n\nconst plugin = {\n  // eslint-disable-next-line no-undef\n  version: VERSION,\n  install (Vue, options) {\n    const finalOptions = Object.assign({}, {\n      installComponents: true,\n      componentsPrefix: '',\n    }, options)\n\n    for (const key in finalOptions) {\n      if (typeof finalOptions[key] !== 'undefined') {\n        config[key] = finalOptions[key]\n      }\n    }\n\n    if (finalOptions.installComponents) {\n      registerComponents(Vue, finalOptions.componentsPrefix)\n    }\n  },\n}\n\nexport default plugin\n\n// Auto-install\nlet GlobalVue = null\nif (typeof window !== 'undefined') {\n  GlobalVue = window.Vue\n} else if (typeof global !== 'undefined') {\n  GlobalVue = global.Vue\n}\nif (GlobalVue) {\n  GlobalVue.use(plugin)\n}\n","import Vue from 'vue'\n\nexport default function ({\n  idProp = vm => vm.item.id,\n} = {}) {\n  const store = {}\n  const vm = new Vue({\n    data () {\n      return {\n        store,\n      }\n    },\n  })\n\n  // @vue/component\n  return {\n    data () {\n      return {\n        idState: null,\n      }\n    },\n\n    created () {\n      this.$_id = null\n      if (typeof idProp === 'function') {\n        this.$_getId = () => idProp.call(this, this)\n      } else {\n        this.$_getId = () => this[idProp]\n      }\n      this.$watch(this.$_getId, {\n        handler (value) {\n          this.$nextTick(() => {\n            this.$_id = value\n          })\n        },\n        immediate: true,\n      })\n      this.$_updateIdState()\n    },\n\n    beforeUpdate () {\n      this.$_updateIdState()\n    },\n\n    methods: {\n      /**\n       * Initialize an idState\n       * @param {number|string} id Unique id for the data\n       */\n      $_idStateInit (id) {\n        const factory = this.$options.idState\n        if (typeof factory === 'function') {\n          const data = factory.call(this, this)\n          vm.$set(store, id, data)\n          this.$_id = id\n          return data\n        } else {\n          throw new Error('[mixin IdState] Missing `idState` function on component definition.')\n        }\n      },\n\n      /**\n       * Ensure idState is created and up-to-date\n       */\n      $_updateIdState () {\n        const id = this.$_getId()\n        if (id == null) {\n          console.warn(`No id found for IdState with idProp: '${idProp}'.`)\n        }\n        if (id !== this.$_id) {\n          if (!store[id]) {\n            this.$_idStateInit(id)\n          }\n          this.idState = store[id]\n        }\n      },\n    },\n  }\n}\n"],"names":["config","itemsLimit","isIE","initCompat","init","ua","window","navigator","userAgent","msie","indexOf","parseInt","substring","rv","edge","getInternetExplorerVersion","ResizeObserver","render","_h","this","$createElement","_self","_c","staticClass","attrs","tabindex","staticRenderFns","_scopeId","name","methods","compareAndNotify","_w","$el","offsetWidth","offsetHeight","$emit","addResizeHandlers","_resizeObject","contentDocument","defaultView","addEventListener","removeResizeHandlers","onload","removeEventListener","mounted","_this","$nextTick","object","document","createElement","setAttribute","type","appendChild","data","beforeDestroy","plugin","version","install","Vue","component","GlobalVue","_typeof","obj","Symbol","iterator","constructor","prototype","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_toConsumableArray","arr","Array","isArray","arr2","_arrayWithoutHoles","iter","toString","call","from","_iterableToArray","TypeError","_nonIterableSpread","global","use","VisibilityState","el","options","vnode","instance","Constructor","_classCallCheck","observer","frozen","createObserver","protoProps","staticProps","value","destroyObserver","callback","result","entry","once","throttle","_leading","throttleOptions","leading","delay","timeout","lastState","currentArgs","arguments","undefined","throttled","state","_len","args","_key","apply","concat","clearTimeout","setTimeout","_clear","oldResult","IntersectionObserver","entries","intersectingEntry","find","e","isIntersecting","intersectionRatio","threshold","intersection","context","observe","disconnect","get","bind","_ref2","console","warn","_vue_visibilityState","unbind","ObserveVisibility","update","_ref3","deepEqual","val1","val2","oldValue","directive","root","factory","regex","parents","node","ps","parentNode","style","prop","getComputedStyle","getPropertyValue","scroll","test","overflow","HTMLElement","SVGElement","scrollingElement","documentElement","module","exports","Scrollparent","items","required","keyField","String","default","direction","validator","includes","listTag","itemTag","disabled","Boolean","simpleArray","supportsPassive","opts","uid","normalizeComponent","template","script","scopeId","isFunctionalTemplate","moduleIdentifier","shadowMode","createInjector","createInjectorSSR","createInjectorShadow","hook","_compiled","functional","$vnode","ssrContext","parent","__VUE_SSR_CONTEXT__","_registeredComponents","add","_ssrRegister","$root","$options","shadowRoot","originalRender","h","existing","beforeCreate","__vue_script__","components","directives","itemSize","Number","gridItems","itemSecondarySize","minItemSize","sizeField","typeField","buffer","pageMode","prerender","emitUpdate","skipHover","listClass","itemClass","pool","totalSize","ready","hoverKey","computed","sizes","-1","accumulator","field","current","computedMinSize","l","size","$_computedMinItemSize","scrollerStyle","watch","updateVisibleItems","applyPageMode","handler","deep","created","$_startIndex","$_endIndex","$_views","Map","$_unusedViews","$_scrollDirty","$_lastUpdateScrollPosition","$_prerender","error","activated","lastPosition","scrollToPosition","removeListeners","addView","index","item","view","position","nonReactive","id","used","push","unuseView","fake","unusedViews","nr","unusedPool","set","delete","handleResize","handleScroll","event","requestAnimationFrame","continuous","$_refreshTimout","handleVisibilityChange","isVisible","boundingClientRect","width","height","checkItem","checkPositionDiff","count","views","startIndex","endIndex","visibleStartIndex","visibleEndIndex","Math","min","getScroll","positionDiff","start","end","beforeSize","$refs","before","scrollHeight","after","afterSize","oldI","a","b","ceil","max","floor","itemsLimitError","$_continuous","clear","unusedIndex","v","Error","pop","offset","$_sortTimer","sortViews","getListenerTarget","ScrollParent","body","isVertical","scrollState","bounds","getBoundingClientRect","boundsSize","top","left","innerHeight","innerWidth","scrollTop","clientHeight","scrollLeft","clientWidth","addListeners","listenerTarget","passive","scrollToItem","viewport","scrollDirection","scrollDistance","viewportEl","tagName","scrollerPosition","getItemPosition","getItemSize","getOffset","getClientSize","getScrollSize","scrollInfo","clientSize","scrollSize","scale","tail","log","sort","viewA","viewB","RecycleScroller","provide","$_resizeObserver","CustomEvent","detail","contentRect","dispatchEvent","vscrollData","vscrollParent","vscrollResizeObserver","inheritAttrs","active","validSizes","itemsWithSize","$_undefinedMap","listeners","$listeners","forceUpdate","immediate","next","prev","prevActiveTop","activeTop","$_updates","$_undefinedSizes","deactivated","onScrollerResize","scroller","onScrollerVisible","force","onScrollerScroll","scrollToBottom","$_scrollingToBottom","cb","pauseScrollInsert","asynch","Promise","resolve","diff","tmp","beforeLength","keyValue","_","findIndex","inject","watchData","sizeDependencies","emitResize","tag","hasOwnProperty","finalActive","onDataUpdate","observeSize","unobserveSize","$_pendingVScrollUpdate","updateSize","$isServer","$_forceNextVScrollUpdate","updateWatchData","k","$watch","$on","onVscrollUpdate","onVscrollUpdateSize","$off","$_pendingSizeUpdate","computeSize","$_watchData","applySize","$set","onResize","unobserve","$slots","VERSION","finalOptions","assign","installComponents","componentsPrefix","prefix","DynamicScroller","DynamicScrollerItem","registerComponents","idProp","vm","store","idState","$_id","$_getId","$_updateIdState","beforeUpdate","$_idStateInit"],"mappings":"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"}